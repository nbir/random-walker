/*
* Constants
*/
var ROWS = 100;
var COLS = 100;
var GRID_SIZE = 5;
var AGENT_SIZE = 4;
var OBSTACLE_SIZE = 5;
var OBSTACLE_COURSE = {
	0: [],
	1: [[21, 21], [22, 21], [23, 21], [24, 21], [25, 21], [26, 21], [27, 21], [28, 21], [29, 21], [30, 21], [30, 22], [30, 23], [30, 24], [30, 25], [30, 26], [30, 27], [30, 28], [30, 29], [30, 30], [29, 30], [28, 30], [27, 30], [26, 30], [25, 30], [24, 30], [23, 30], [22, 30], [21, 30], [21, 29], [21, 28], [21, 27], [21, 26], [21, 25], [21, 24], [21, 23], [21, 22],
		[71, 21], [72, 21], [73, 21], [74, 21], [75, 21], [76, 21], [77, 21], [78, 21], [79, 21], [80, 21], [80, 22], [80, 23], [80, 24], [80, 25], [80, 26], [80, 27], [80, 28], [80, 29], [80, 30], [79, 30], [78, 30], [77, 30], [76, 30], [75, 30], [74, 30], [73, 30], [72, 30], [71, 30], [71, 29], [71, 28], [71, 27], [71, 26], [71, 25], [71, 24], [71, 23], [71, 22], 
		[71, 71], [72, 71], [73, 71], [74, 71], [75, 71], [76, 71], [77, 71], [78, 71], [79, 71], [80, 71], [80, 72], [80, 73], [80, 74], [80, 75], [80, 76], [80, 77], [80, 78], [80, 79], [80, 80], [79, 80], [78, 80], [77, 80], [76, 80], [75, 80], [74, 80], [73, 80], [72, 80], [71, 80], [71, 79], [71, 78], [71, 77], [71, 76], [71, 75], [71, 74], [71, 73], [71, 72],
		[21, 71], [22, 71], [23, 71], [24, 71], [25, 71], [26, 71], [27, 71], [28, 71], [29, 71], [30, 71], [30, 72], [30, 73], [30, 74], [30, 75], [30, 76], [30, 77], [30, 78], [30, 79], [30, 80], [29, 80], [28, 80], [27, 80], [26, 80], [25, 80], [24, 80], [23, 80], [22, 80], [21, 80], [21, 79],  [21, 78], [21, 77], [21, 76], [21, 75], [21, 74], [21, 73], [21, 72]],
	2: [[30, 0], [30, 1], [30, 2], [30, 3], [30, 4], [30, 5], [30, 6], [30, 7], [30, 8], [30, 9], [30, 10], [30, 11], [30, 12], [30, 13], [30, 14], [30, 15], [30, 16], [30, 17], [30, 18], [30, 19], [30, 20], [30, 21], [30, 22], [30, 23], [30, 24], [30, 25], [30, 26], [30, 27], [30, 28], [30, 29], [0, 29], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [9, 29], [10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [18, 29], [19, 29], [20, 29], [21, 29], [22, 29], [23, 29], [24, 29], [25, 29], [26, 29], [27, 29], [28, 29], [29, 29],
		[70, 0], [70, 1], [70, 2], [70, 3], [70, 4], [70, 5], [70, 6], [70, 7], [70, 8], [70, 9], [70, 10], [70, 11], [70, 12], [70, 13], [70, 14], [70, 15], [70, 16], [70, 17], [70, 18], [70, 19], [70, 20], [70, 21], [70, 22], [70, 23], [70, 24], [70, 25], [70, 26], [70, 27], [70, 28], [70, 29], [70, 29], [71, 29], [72, 29], [73, 29], [74, 29], [75, 29], [76, 29], [77, 29], [78, 29], [79, 29], [80, 29], [81, 29], [82, 29], [83, 29], [84, 29], [85, 29], [86, 29], [87, 29], [88, 29], [89, 29], [90, 29], [91, 29], [92, 29], [93, 29], [94, 29], [95, 29], [96, 29], [97, 29], [98, 29], [99, 29],
		[70, 70], [70, 71], [70, 72], [70, 73], [70, 74], [70, 75], [70, 76], [70, 77], [70, 78], [70, 79], [70, 80], [70, 81], [70, 82], [70, 83], [70, 84], [70, 85], [70, 86], [70, 87], [70, 88], [70, 89], [70, 90], [70, 91], [70, 92], [70, 93], [70, 94], [70, 95], [70, 96], [70, 97], [70, 98], [70, 99], [71, 70], [72, 70], [73, 70], [74, 70], [75, 70], [76, 70], [77, 70], [78, 70], [79, 70], [80, 70], [81, 70], [82, 70], [83, 70], [84, 70], [85, 70], [86, 70], [87, 70], [88, 70], [89, 70], [90, 70], [91, 70], [92, 70], [93, 70], [94, 70], [95, 70], [96, 70], [97, 70], [98, 70], [99, 70],
		[29, 70], [29, 71], [29, 72], [29, 73], [29, 74], [29, 75], [29, 76], [29, 77], [29, 78], [29, 79], [29, 80], [29, 81], [29, 82], [29, 83], [29, 84], [29, 85], [29, 86], [29, 87], [29, 88], [29, 89], [29, 90], [29, 91], [29, 92], [29, 93], [29, 94], [29, 95], [29, 96], [29, 97], [29, 98], [29, 99], [0, 70], [1, 70], [2, 70], [3, 70], [4, 70], [5, 70], [6, 70], [7, 70], [8, 70], [9, 70], [10, 70], [11, 70], [12, 70], [13, 70], [14, 70], [15, 70], [16, 70], [17, 70], [18, 70], [19, 70], [20, 70], [21, 70], [22, 70], [23, 70], [24, 70], [25, 70], [26, 70], [27, 70], [28, 70]],
	3: [[0, 25], [1, 25], [2, 25], [3, 25], [4, 25], [5, 25], [6, 25], [7, 25], [8, 25], [9, 25], [10, 25], [11, 25], [12, 25], [13, 25], [14, 25], [15, 25], [16, 25], [17, 25], [18, 25], [19, 25], [20, 25], [21, 25], [22, 25], [23, 25], [24, 25], [24, 25], [25, 25], [26, 25], [27, 25], [28, 25], [29, 25], [30, 25], [31, 25], [32, 25], [33, 25], [34, 25], [35, 25], [36, 25], [37, 25], [38, 25], [39, 25], [40, 25], 
		[50, 25], [51, 25], [52, 25], [53, 25], [54, 25], [55, 25], [56, 25], [57, 25], [58, 25], [59, 25], [60, 25], [61, 25], [62, 25], [63, 25], [64, 25], [65, 25], [66, 25], [67, 25], [68, 25], [69, 25], [70, 25], [71, 25], [72, 25], [73, 25], [74, 25], 
		[84, 25], [85, 25], [86, 25], [87, 25], [88, 25], [89, 25], [90, 25], [91, 25], [92, 25], [93, 25], [94, 25], [95, 25], [96, 25], [97, 25], [98, 25], [99, 25], 
		[0, 50], [1, 50], [2, 50], [3, 50], [4, 50], [5, 50], [6, 50], [7, 50], [8, 50], [9, 50], [10, 50], [11, 50], [12, 50], [13, 50], [14, 50], [15, 50], [16, 50], [17, 50], [18, 50], [19, 50], [20, 50], [21, 50], [22, 50], [23, 50], [24, 50], [25, 50], [26, 50], [27, 50], [28, 50], [29, 50], [30, 50], [31, 50], [32, 50], [33, 50], [34, 50], [35, 50], 
		[65, 50], [66, 50], [67, 50], [68, 50], [69, 50], [70, 50], [71, 50], [72, 50], [73, 50], [74, 50], [75, 50], [76, 50], [77, 50], [78, 50], [79, 50], [80, 50], [81, 50], [82, 50], [83, 50], [84, 50], [85, 50], [86, 50], [87, 50], [88, 50], [89, 50], [90, 50], [91, 50], [92, 50], [93, 50], [94, 50], [95, 50], [96, 50], [97, 50], [98, 50], [99, 50], 
		[0, 75], [1, 75], [2, 75], [3, 75], [4, 75], [5, 75], [6, 75], [7, 75], [8, 75], [9, 75], [10, 75], [11, 75], [12, 75], [13, 75], [14, 75], [15, 75], 
		[25, 75], [26, 75], [27, 75], [28, 75], [29, 75], [30, 75], [31, 75], [32, 75], [33, 75], [34, 75], [35, 75], [36, 75], [37, 75], [38, 75], [39, 75], [40, 75], [41, 75], [42, 75], [43, 75], [44, 75], [45, 75], [46, 75], [47, 75], [48, 75], [49, 75], 
		[59, 75], [60, 75], [61, 75], [62, 75], [63, 75], [64, 75], [65, 75], [66, 75], [67, 75], [68, 75], [69, 75], [70, 75], [71, 75], [72, 75], [73, 75], [74, 75], [75, 75], [76, 75], [77, 75], [78, 75], [79, 75], [80, 75], [81, 75], [82, 75], [83, 75], [84, 75], [85, 75], [86, 75], [87, 75], [88, 75], [89, 75], [90, 75], [91, 75], [92, 75], [93, 75], [94, 75], [95, 75], [96, 75], [97, 75], [98, 75], [99, 75]],
	4: [[35, 35], [36, 35], [37, 35], [38, 35], [39, 35], [40, 35], [41, 35], [42, 35], [43, 35], [44, 35], [45, 35], [46, 35], [47, 35], [48, 35], [49, 35], [50, 35], [51, 35], [52, 35], [53, 35], [54, 35], [55, 35], [56, 35], [57, 35], [58, 35], [59, 35], [60, 35], [61, 35], [62, 35], [63, 35], [64, 35], 
		[35, 35], [35, 36], [35, 37], [35, 38], [35, 39], [35, 40], [35, 41], [35, 42], [35, 43], [35, 44], [35, 45], [35, 46], [35, 47], [35, 48], [35, 49], [35, 50], [35, 51], [35, 52], [35, 53], [35, 54], 
		[65, 45], [65, 46], [65, 47], [65, 48], [65, 49], [65, 50], [65, 51], [65, 52], [65, 53], [65, 54], [65, 55], [65, 56], [65, 57], [65, 58], [65, 59], [65, 60], [65, 61], [65, 62], [65, 63], [65, 64], 
		[36, 65], [37, 65], [38, 65], [39, 65], [40, 65], [41, 65], [42, 65], [43, 65], [44, 65], [45, 65], [46, 65], [47, 65], [48, 65], [49, 65], [50, 65], [51, 65], [52, 65], [53, 65], [54, 65], [55, 65], [56, 65], [57, 65], [58, 65], [59, 65], [60, 65], [61, 65], [62, 65], [63, 65], [64, 65], [65, 65]]	
	}

/*
* System parameters
*/
var n_agents = 0;
var obstacle_type = 0;
var time_steps = 1000;
var fps = 30;

/*
* Flags
*/
var run = false;
var obstacles_drawn = false;


/*
* Containers
*/
var agents = [];
var obstacles = [];


/*
* DOM objects
*/
var canvas = document.querySelector('canvas');
var ctx = canvas.getContext('2d');


/*
*
* Animation
*
*/
function loop() {
	clear();
	update();
	drawObstacles();
	drawAgents();
	queue();
}


function clear() {
	ctx.clearRect(0, 0, canvas.width, canvas.height);
}


function update() {
	for (var i = 0; i < agents.length; i++) {
		agents[i].move();
	}
	var counter = parseInt($("#counter-val").text());
	$("#counter-val").text(counter + 1);
}

function queue() {
	if (run) {
		if (time_steps > 1) {
			setTimeout(function() {
				window.requestAnimationFrame(loop);
				time_steps -= 1;
			}, 1000/fps);
		}
		else {
			run = false;
		}
	}
}


/*
*
* Agent functions
*
*/
function initAgents() {
	agents = [];

	var fillRows = Math.ceil(n_agents / 10);

	for (var j = ROWS/2 - Math.floor(fillRows/2); j < ROWS/2 + fillRows/2; j++) {
		for (var i = COLS/2 - 5; i < COLS/2 + 5; i ++) {
			agents.push(new Agent(i, j));
		}
	}
}

function drawAgents() {
	ctx.fillStyle = 'rgba(0,0,0,0.9)';

	for (var i = 0; i < agents.length; i++) {
		var agent = agents[i];
		ctx.fillRect(agent.x * GRID_SIZE, 
					agent.y * GRID_SIZE, 
					AGENT_SIZE, 
					AGENT_SIZE);
	}
}

function clearAgents() {
	for (var i = 0; i < agents.length; i++) {
		var agent = agents[i];
		ctx.clearRect(agent.x * GRID_SIZE, 
					agent.y * GRID_SIZE, 
					AGENT_SIZE, 
					AGENT_SIZE);
	}
}


/*
*
* Obstacle functions
*
*/
function initObstacles() {
	obstacles = [];

	for (var i = 0; i < OBSTACLE_COURSE[obstacle_type].length; i++) {
		var pos = OBSTACLE_COURSE[obstacle_type][i];
		obstacles.push(new Obstacle(pos[0], pos[1]));	
	}
}

function drawObstacles() {
	clearObstacles()

	for (var i = 0; i < obstacles.length; i++) {
		var obstacle = obstacles[i];

		if (obstacle.found) {
			ctx.fillStyle = 'rgba(0,0,255,0.8)';
		}
		else {
			ctx.fillStyle = 'rgba(255,0,0,0.8)';
		}

		ctx.fillRect(obstacle.x * GRID_SIZE, 
					obstacle.y * GRID_SIZE, 
					OBSTACLE_SIZE, 
					OBSTACLE_SIZE);
	}
}

function clearObstacles() {
	for (var i = 0; i < obstacles.length; i++) {
		var agent = obstacles[i];
		ctx.clearRect(agent.x * GRID_SIZE, 
					agent.y * GRID_SIZE, 
					OBSTACLE_SIZE, 
					OBSTACLE_SIZE);
	}
}
